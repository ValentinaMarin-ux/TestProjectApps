package com.example.test.models;

import jakarta.persistence.*;

import java.time.LocalDate;

@Entity // Marks this class as a JPA entity (mapped to a database table)
@Table(name = "payments") // Specifies the table name in the database
public class Payment {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id; // Unique identifier for the payment, auto-generated by the database

    @Column(nullable = false)
    private double amount; // Payment amount (using double to allow decimals)

    @Column(nullable = false, length = 50)
    private String status; // Payment status (e.g., "Completed", "Pending", "Failed"), max length 50 characters

    @Column(nullable = false)
    private LocalDate paymentDate; // Stores the date when the payment was made

    // Relationship with Rental (Many Payments -> One Rental)
    @ManyToOne
    @JoinColumn(name = "rental_id", nullable = false)
    private Rental rental; // The rental associated with this payment

    // Default constructor (required for JPA)
    public Payment() {}

    // Constructor with parameters to initialize a Payment object
    public Payment(double amount, String status, LocalDate paymentDate, Rental rental) {
        this.amount = amount;
        this.status = status;
        this.paymentDate = paymentDate;
        this.rental = rental;
    }

    // Getters and Setters (used to access and modify private fields)
    
    public Long getId() {
        return id;
    }

    public double getAmount() {
        return amount;
    }

    public void setAmount(double amount) {
        this.amount = amount;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public LocalDate getPaymentDate() {
        return paymentDate;
    }

    public void setPaymentDate(LocalDate paymentDate) {
        this.paymentDate = paymentDate;
    }

    public Rental getRental() {
        return rental;
    }

    public void setRental(Rental rental) {
        this.rental = rental;
    }
}

